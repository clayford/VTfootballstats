{
    "contents" : "# drive summaries would be good to start with\n# get last three columns: How Lost, Pl-Yds, TOP\nlibrary(XML) # needed to convert HTML table to list object\n\n# I think it makes sense to get all IDs first then use those in the loop instead of looping through each season\nallids <- data.frame(season=numeric(0),ID=character(0)) #will hold all box score ids; 322 games from 1987 - 2012\n# new version using sub() function\nfor (i in 1987:2012){\n  url <- paste(\"http://www.hokiesports.com/football/stats/\",i,sep=\"\")\n  wp <- readLines(url)  \n  box <- grep(\"showstats\\\\.html\\\\?[0-9]+\",wp,value=TRUE) # split the element at \"?\"\n  ids <- sub(\".*?html\\\\?([0-9]{4,5}).*\", \"\\\\1\", box)\n  ids <- data.frame(season=i,ID=ids)\n  allids <- rbind(allids,ids)\n}\n# allids\n\n# this should work for the loop\n# for (i in allids[,2])\n# recall that allids has season  \n\n# turns out there are no drive summaries for 1994 (all games?)\n# 5881\n# vtFballData <- function(start,stop,season){\ndsf <- c()\n# read the source code\nj <- 1 # counter for season from allids\nfor (i in allids[,2]){\n\turl <- paste(\"http://www.hokiesports.com/football/stats/showstats.html?\",i,sep=\"\")\n\tweb_page <- readLines(url)\n  \n  # see if drive summary is available, not always unfortunately\n\tif (length(grep(\"Virginia Tech Drive Summary\", web_page)) == 0) {j <- j + 1; next} #increment counter to keep track of seasons\n\t\n  # find where VT drive summary begins\n\tdsum <- web_page[(grep(\"Virginia Tech Drive Summary\", web_page) - 2):(grep(\"Virginia Tech Drive Summary\", web_page) + 18)]\n\tdsum2 <- readHTMLTable(dsum)\n\trn <- dim(dsum2[[1]])[1]\n\tcn <- dim(dsum2[[1]])[2]\n\tds <- dsum2[[1]][4:rn,c(1,(cn-2):cn)]\n\tds[,3] <- as.character(ds[,3]) # convert Pl-Yds from factor to character\n\t# substitute space for first dash, split string at space (creates list object)\n  # use do.call to assemble list elements into data frame\n\tpy <- do.call(rbind,strsplit(sub(\"-\",\" \",ds[,3]),\" \"))\n\t# add py dataframe (plays and yards) to ds\n  ds2 <- cbind(ds,py)\n\tds2[,5] <- as.character(ds2[,5]) # convert from factor to character\n\tds2[,6] <- as.character(ds2[,6]) # convert from factor to character\n\tds2[,5] <- as.numeric(ds2[,5]) # convert from character to numeric\n\tds2[,6] <- as.numeric(ds2[,6]) # convert from character to numeric\n\tds2[,3] <- NULL # drop original pl-yds column\n\n\tnames(ds2) <-c(\"quarter\",\"result\",\"top\",\"plays\",\"yards\")\n\t# drop unused factor levels carried over from readlines\n\tds2$quarter <- ds2$quarter[, drop=TRUE] \n\tds2$result <- ds2$result[, drop=TRUE]\n\n\t# convert TOP from factor to character\n\tds2[,3] <- as.character(ds2[,3]) \n\t# convert TOP from M:S to just seconds\n\tds2$top <- sapply(strsplit(ds2$top,\":\"),\n  \t\tfunction(x) {\n    \t\tx <- as.numeric(x)\n    \t\tx[1]*60 + x[2]})\n\n\t# need to add opponent\n\topp <- web_page[grep(\"Drive Summary\", web_page)]\n\topp <- opp[grep(\"Virginia Tech\", opp, invert=TRUE)] # get the one that is not VT\n\topp <- strsplit(opp,\">\")[[1]][2]\n\topp <- sub(\" Drive Summary</td\",\"\",opp)\n\tds2 <- cbind(allids[j,1],opp,ds2) # allids[j,1] gives the season\n\tdsf <- rbind(dsf,ds2)\n  j <- j + 1 # counter to get season out of allids data frame\n}\n\n# change \"allids[j, 1]\" column header to \"season\"\nnames(dsf)[1] <- \"season\"\n\nsetwd(\"data\")\nwrite.csv(dsf,\"vt_drive_summaries.csv\", row.names = FALSE)\n\n\n\n####################################################################################\n# function to get the box score \"showstats\" ID numbers\n\n# test <- readLines(\"http://www.hokiesports.com/football/stats/2011/\")\n# box <- grep(\"showstats\\\\.html\\\\?[0-9]+\",test,value=TRUE)\n# box1 <- unlist(strsplit(box,\"\\\\?\"))[c(FALSE,TRUE)] #get every second element\n# ids <- substr(box1,1,5)\n\n# seasons: 1987 - 2012 \n\n\n\n\n\n\n# left over code for something else\n####################################################################################\n# find where play-by-play begins\ngrep(\"Play-By-Play\", web_page)\n[1] 1144\n\n# get just the play-by-play section\n# table code starts two lines above \"Play-By-Play\"\n# don't need anything from Participation on down\n\ntest <- web_page[(grep(\"Play-By-Play\", web_page) - 2):(grep(\"<h4>Participation</h4>\", web_page)-1)]\ntest2 <- readHTMLTable(test)\n",
    "created" : 1370176326979.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "435382271",
    "id" : "B64B40E5",
    "lastKnownWriteTime" : 1370186532,
    "path" : "~/GitHub/VTfootballstats/data_prep/vt_fb_data.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}
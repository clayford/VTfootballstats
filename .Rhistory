result <- web_page[grep("linescore",web_page):(grep("linescore",web_page) + 16)]
result2 <- readHTMLTable(result)
# just want scores, not last line which is garbage; turns to data frame
result2 <- result2[[1]][1:2,]
# make final score numeric
result2$T <- as.character(result2$T)
result2$T <- as.numeric(result2$T)
# row number that contains VT
hk <- grep("Virginia Tech",result2[,1])
nhk <- grep("Virginia Tech",result2[,1],invert=TRUE)
# get last column number
lc <- dim(result2)[2]
# vt and opp score
hks <- result2[hk,lc]
nhks <- result2[nhk,lc]
#determine win or loss or tie
if (hks > nhks) {
outcome <- "win"
} else if (hks < nhks){
outcome <- "loss"
} else {
outcome <- "tie"
}
ds2 <- cbind(allids[j,1],opp,ds2,outcome) # allids[j,1] gives the season
dsf <- rbind(dsf,ds2)
j <- j + 1 # counter to get season out of allids data frame
}
# change "allids[j, 1]" column header to "season"
names(dsf)[1] <- "season"
setwd("data")
write.csv(dsf,"vt_drive_summaries.csv", row.names = FALSE)
setwd("_statistics/C4K")
getwd()
setwd("~/_statistics/C4K")
donors <- read.csv("C4K_export.csv",header=TRUE, stringsAsFactors = FALSE)
# make personID, donor type factors
donors$X_kf_PersonID <- as.factor(donors$X_kf_PersonID)
donors$DonorType <- as.factor(donors$DonorType)
donors$X_kp_DonationID <- as.factor(donors$X_kp_DonationID)
# convert
for (i in 1:44) {
donors[[i]] <- as.factor(donors[[i]])
}
names(donors)
donors$date[1:5]
donors$date[[1:5]]
donors$Date[1:5]
as.Date("5/17/2006", format="%m/%d/%Y")
donors$Date <- as.Date("donors$Date", format="%m/%d/%Y")
donors$DonationYear <- as.POSIXlt(donors$Date)$year
donors$DonationYear[1:5]
donors$Date[1:5]
donors <- read.csv("C4K_export.csv",header=TRUE, stringsAsFactors = FALSE)
# make personID, donor type factors
donors$X_kf_PersonID <- as.factor(donors$X_kf_PersonID)
donors$DonorType <- as.factor(donors$DonorType)
donors$X_kp_DonationID <- as.factor(donors$X_kp_DonationID)
# convert
for (i in 1:44) {
donors[[i]] <- as.factor(donors[[i]])
}
donors$Date[1:5]
donors$Date2 <- as.Date("donors$Date", format="%m/%d/%Y")
donors$Date2[1:5]
donors$Date2 <- as.Date(donors$Date, format="%m/%d/%Y")
donors$Date2[1:5]
donors$Date2 <- NULL
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
donors$DonationYear <- as.POSIXlt(donors$Date)$year
donors$Date[1:5]
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
donors$DonationYear[1:5]
donors$DonationYear <- as.POSIXlt(donors$Date)$year + 1900
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
donors$DonationYear[1:5]
str(donors)
donors$Amount2 <- as.numeric(donors$Amount)
summary(donors$Amount2)
setwd("~/_statistics/C4K")
donors <- read.csv("C4K_export.csv",header=TRUE, stringsAsFactors = FALSE)
# make personID, donor type factors
donors$X_kf_PersonID <- as.factor(donors$X_kf_PersonID)
donors$DonorType <- as.factor(donors$DonorType)
donors$X_kp_DonationID <- as.factor(donors$X_kp_DonationID)
# convert
for (i in 1:44) {
donors[[i]] <- as.factor(donors[[i]])
}
# convert date string to date class
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
# create var for year of donation
donors$DonationYear <- as.POSIXlt(donors$Date)$year + 1900
# z_Amount_Summary is total amount donated per PersonID
# convert amount to num
donors$Amount <- as.numeric(donors$Amount) # introduces 3 NAs
# which records have NA for Amount
miss_amount <- donors[which(is.na(donors$Amount)),]
write.csv(miss_amount,"c4k_missing_amount.csv") # give to Kala
donors <- donors[which(!is.na(donors$Amount)),]
aggregate(Amount ~ DonorType, data=donors, mean)
donors$Amount[donors$DonorType=="Anonymous",]
donors$Amount[which(donors$DonorType=="Anonymous")]
mean(donors$Amount[which(donors$DonorType=="Anonymous")])
aggregate(Amount ~ DonorType, data=donors, median)
aggregate(Amount ~ DonorType, data=donors, min)
aggregate(Amount ~ DonorType, data=donors, max)
summary(donors$DonorType)
summary(donors$Amount)
donors[donors$Amount < 0,]
which(donors$Amount <= 0)
donors <- donors[which(donors$Amount > 0)),]
donors <- donors[which(donors$Amount > 0),]
aggregate(Amount ~ DonorType, data=donors, mean)
aggregate(Amount ~ DonorType, data=donors, median)
aggregate(Amount ~ DonorType, data=donors, min)
aggregate(Amount ~ DonorType, data=donors, max)
donors2 <- donors[duplicated(donors$X_kf_PersonID),]
dim(donors2)
table(donors2$DonorType)
# average cumulative giving by donor type
aggregate(z_Amount_Summary ~ DonorType, data=donors2, mean)
aggregate(Amount ~ DonationYear, data=donors, median)
aggregate(Amount ~ DonationYear, data=donors, min)
aggregate(Amount ~ DonationYear, data=donors, max)
# cumulative giving by donor type
aggregate(z_Amount_Summary ~ DonorType, data=donors2, mean)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, median)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, min)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, max)
aggregate(Amount ~ DonationYear, data=donors, mean)
aggregate(Amount ~ DonationYear, data=donors, median)
aggregate(Amount ~ DonationYear, data=donors, sum)
plot(aggregate(Amount ~ DonationYear, data=donors, sum,
subset = (DonationYear!="2013" & DonorType=="Business")), type="l", col=1, ylim=c(0,160000),
main="Total Donations by Donor Type by Year through 2012")
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Personal")), type="l", col=2)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Foundation")), type="l", col=3)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Anonymous")), type="l", col=4)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="")), type="l", col=5)
legend("topleft", c("Business", "Personal", "Foundation", "Anonymous", "Missing"), lty=1, col=1:5)
aggregate(Amount ~ DonationYear + DonorType, data=donors, sum)
hist(donors$Amount)
help(hist)
table(donors$X_kp_PersonID)
table(donors$X_kf_PersonID)
cdon <- table(donors$X_kf_PersonID)
class(cdon)
sort(cdon)
help(sort)
sort(cdon, decreasing=TRUE)
donors[which(donors$X_kf_PersonID=="10443"),]
donors[which(donors$X_kf_PersonID=="10443")]
donors[which(donors$X_kf_PersonID=="10443"),]
donors <- donors[which(!is.na(donors$Amount)),]
cdon <- table(donors$X_kf_PersonID)
sort(cdon, decreasing=TRUE)
cdon <- sort(table(donors$X_kf_PersonID), decreasing=TRUE)
cdon
cdon[1:10]
dim(cdon)
cdon <- cdon[-1006]
dim(cdon)
cdon
hist(cdon)
h_cdon <- hist(cdon)
h_cdon$counts
h_cdon
cdon[1:10] # top 10
table(donors$X_kf_PersonID ~ donors$DonorType)
help(table)
summary(cdon)
plot(Amount ~ DonationYear, data=donors)
barplot(Amount ~ DonationYear, data=donors)
help(barplot)
barplot(Amount,data=donors)
barplot(donors$Amount)
mp <- barplot(VADeaths) # default
tot <- colMeans(VADeaths)
text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
barplot(VADeaths, beside = TRUE,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"),
legend = rownames(VADeaths), ylim = c(0, 100))
title(main = "Death Rates in Virginia", font.main = 4)
VADeaths
class(VADeaths)
barplot(cdon)
barplot(cdon[1:10])
aggregate(Amount ~ DonorType + DonationYear, data=donors, sum)
agchart <- aggregate(Amount ~ DonorType + DonationYear, data=donors, sum)
barplot(agchart)
plot(agchart)
class(agchart)
library(reshape2)
install.packages("reshape2")
library(reshape2)
dcast(agchart, DonorType ~ DonationYear, value.var="Amount")
agwide <- dcast(agchart, DonorType ~ DonationYear, value.var="Amount")
barplot(agwide)
class(VADeaths)
VADeaths
plot(agwide)
setwd("~/_statistics/C4K")
donors <- read.csv("C4K_export.csv",header=TRUE, stringsAsFactors = FALSE)
# make personID, donor type factors
donors$X_kf_PersonID <- as.factor(donors$X_kf_PersonID)
donors$DonorType <- as.factor(donors$DonorType)
donors$X_kp_DonationID <- as.factor(donors$X_kp_DonationID)
# convert
for (i in 1:44) {
donors[[i]] <- as.factor(donors[[i]])
}
# convert date string to date class
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
# create var for year of donation
donors$DonationYear <- as.POSIXlt(donors$Date)$year + 1900
# z_Amount_Summary is total amount donated per PersonID
# convert amount to num
donors$Amount <- as.numeric(donors$Amount) # introduces 3 NAs
dim(donors)
donors <- donors[which(!is.na(donors$Amount)),]
dim(donors)
library(plyr)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
agchart <- aggregate(Amount ~ DonorType + DonationYear, data=donors, sum)
agchart
agbp <- ddply(agchart, "DonationYear", transform, percent_amt = Amount / sum(Amount)*100)
agbp
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=Cultivar) +
geom_bar(stat="identity", colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1"))
str(agbp)
agbp[,2] <- as.factor(agbp[2,])
agbp[,2] <- as.factor(agbp[,2])
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=Cultivar) +
geom_bar(stat="identity", colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1"))
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=Cultivar) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1"))
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=Cultivar)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1") +
geom_text(aes(label=percent_amt), vjust=1.5, color="black")
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
ggplot(agbp, aes(x=DonationYear,y=percent_amt, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1") +
ggtitle("Donations as Percentage by Donor Type per Year")
agbp <- ddply(agchart, "DonationYear", transform, Percent = Amount / sum(Amount)*100)
# make DonationYear factor
agbp[,2] <- as.factor(agbp[,2])
# create bar graph
ggplot(agbp, aes(x=DonationYear,y=Percent, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1") +
geomtext(eas(label))
ggtitle("Donations as Percentage by Donor Type per Year")
ggplot(agbp, aes(x=DonationYear,y=Percent, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1") +
ggtitle("Donations as Percentage by Donor Type per Year")
ggplot(agbp, aes(x=DonationYear,y=Percent, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1") +
ggtitle("Proportion of Donations by Donor Type by Year")
aggregate(Amount ~ DonorType, data=donors, sum)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, sum)
donors2 <- donors[duplicated(donors$X_kf_PersonID),]
aggregate(z_Amount_Summary ~ DonorType, data=donors2, mean)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, median)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, min)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, max)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, sum)
setwd("~/_statistics/C4K")
donors <- read.csv("C4K_export.csv",header=TRUE, stringsAsFactors = FALSE)
# make personID, donor type factors
donors$X_kf_PersonID <- as.factor(donors$X_kf_PersonID)
donors$DonorType <- as.factor(donors$DonorType)
donors$X_kp_DonationID <- as.factor(donors$X_kp_DonationID)
# convert
for (i in 1:44) {
donors[[i]] <- as.factor(donors[[i]])
}
# convert date string to date class
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
# create var for year of donation
donors$DonationYear <- as.POSIXlt(donors$Date)$year + 1900
# z_Amount_Summary is total amount donated per PersonID
# convert amount to num
donors$Amount <- as.numeric(donors$Amount) # introduces 3 NAs
# which records have NA for Amount
miss_amount <- donors[which(is.na(donors$Amount)),]
write.csv(miss_amount,"c4k_missing_amount.csv") # give to Kala
# drop records with Amount = NA
donors <- donors[which(!is.na(donors$Amount)),]
donors <- donors[which(donors$Amount > 0),]
cdon <- sort(table(donors$X_kf_PersonID), decreasing=TRUE)
cdon
class(cdon)
cdon[1]
breaks <- c(1,2,3,5,10,15,20)
countdonors <- cut(cdon,breaks)
countdonors
breaks <- c(0,1,2,3,5,10,15,20,50,100)
countdonors <- cut(cdon,breaks)
countdonors
cdon <- cdon[-1006] # drop last value which equals 0
breaks <- c(0,1,2,3,5,10,15,20,50,100)
countdonors <- cut(cdon,breaks)
countdonors
summary(countdonors)
table(donors2$DonorType)
donors2 <- donors[duplicated(donors$X_kf_PersonID),]
# break down of donor type
table(donors2$DonorType)
table(donors2$X_kf_PersonID)
summary(table(donors2$X_kf_PersonID))
summary(table(donors$X_kf_PersonID))
table(donors2$DonorType)
length(donors2$DonorType)
summary(donors2$X_kf_PersonID)
length(donors2$X_kf_PersonID)
dim(donors2)
donors2[1:10,58:62]
help(duplicated)
length(donors$X_kf_PersonID)
dim(donors)
unique(donors$X_kf_PersonID)
length(unique(donors$X_kf_PersonID))
dim(iris)
dim(unique(iris))
iris
donors3 <- unique(donors(donors$X_kf_PersonID))
duplicate(donors$X_kf_PersonID)
duplicated(donors$X_kf_PersonID)
keep <- duplicated(donors$X_kf_PersonID)
donors2 <- donors[keep,]
dim(donors2)
sum(keep)
donors2[1:10,57:62]
donors[1:10,57:62]
donors <- donors[order(donors$X_kf_PersonID)]
donors <- donors[order(donors$X_kf_PersonID),]
donors[1:10,57:62]
keep <- duplicated(donors$X_kf_PersonID)
keep[1:10]
donors2 <- donors[!keep,]
donors2[1:10,57:62]
dim(donors2)
one <- duplicated(donors$X_kf_PersonID)
donors2 <- donors[!one,]
sum(one)
table(donors2$DonorType)
summary(table(donors2$X_kf_PersonID))
aggregate(z_Amount_Summary ~ DonorType, data=donors2, mean)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, median)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, min)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, max)
aggregate(z_Amount_Summary ~ DonorType, data=donors2, sum)
breaks <- c(0,1,2,3,4,5,10,15,20,50,100)
countdonors <- cut(cdon,breaks)
countdonors
summary(countdonors)
dim(donors)
agchart <- aggregate(Amount ~ DonorType + DonationYear, data=donors, sum)
library(reshape2) # see R graphics cookbook p. 369
agwide <- dcast(agchart, DonorType ~ DonationYear, value.var="Amount")
agwide
agbp <- ddply(agchart, "DonationYear", transform, Percent = Amount / sum(Amount)*100)
# make DonationYear factor
agbp[,2] <- as.factor(agbp[,2])
library(plyr)
library(ggplot2)
# scale data to 100% in each stack; R graphics cookbook p. 37
agbp <- ddply(agchart, "DonationYear", transform, Percent = Amount / sum(Amount)*100)
# make DonationYear factor
agbp[,2] <- as.factor(agbp[,2])
agbp
agbp <- agbp[which(agbp$DonationYear!="2013")]
agbp <- agbp[which(agbp$DonationYear!="2013"),]
agbp
if (agbp$DonorType == "") agbp$DonorType == "Missing"
if (agbp$DonorType = "") agbp$DonorType == "Missing"
agbp <- ddply(agchart, "DonationYear", transform, Percent = Amount / sum(Amount)*100)
# make DonationYear factor
agbp[,2] <- as.factor(agbp[,2])
agbp <- agbp[which(agbp$DonationYear!="2013"),] # drop 2013
agbp$DonorType
levels(agbp$DonorType)
levels(agbp$DonorType)[1] <- "Missing"
agbp
ggplot(agbp, aes(x=DonationYear,y=Percent, fill=DonorType)) +
geom_bar(stat="identity", color="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1") +
ggtitle("Proportion of Donations by Donor Type by Year")
setwd("~/_statistics/C4K")
donors <- read.csv("C4K_export.csv",header=TRUE, stringsAsFactors = FALSE)
# make personID, donor type factors
donors$X_kf_PersonID <- as.factor(donors$X_kf_PersonID)
donors$DonorType <- as.factor(donors$DonorType)
donors$X_kp_DonationID <- as.factor(donors$X_kp_DonationID)
# convert
for (i in 1:44) {
donors[[i]] <- as.factor(donors[[i]])
}
# convert date string to date class
donors$Date <- as.Date(donors$Date, format="%m/%d/%Y")
# create var for year of donation
donors$DonationYear <- as.POSIXlt(donors$Date)$year + 1900
# z_Amount_Summary is total amount donated per PersonID
# convert amount to num
donors$Amount <- as.numeric(donors$Amount) # introduces 3 NAs
# which records have NA for Amount
miss_amount <- donors[which(is.na(donors$Amount)),]
write.csv(miss_amount,"c4k_missing_amount.csv") # give to Kala
# drop records with Amount = NA
donors <- donors[which(!is.na(donors$Amount)),]
# about donor type
levels(donors$DonorType) # 5 levels, one missing
length(which(donors$DonorType == "")) # 104
summary(donors$Amount) # reveals negative donations
#drop amounts of 0 and below
donors <- donors[which(donors$Amount > 0),]
aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Anonymous")
)
plot(aggregate(Amount ~ DonationYear, data=donors, sum,
subset = (DonationYear!="2013" & DonorType=="Business")), type="l", col=1, ylim=c(0,160000),xlim=c(2000,2012)
main="Total Donations by Donor Type by Year through 2012")
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Personal")), type="l", col=2)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Foundation")), type="l", col=3)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Anonymous")), type="l", col=4)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="")), type="l", col=5)
legend("topleft", c("Business", "Personal", "Foundation", "Anonymous", "Missing"), lty=1, col=1:5)
plot(aggregate(Amount ~ DonationYear, data=donors, sum,
subset = (DonationYear!="2013" & DonorType=="Business")), type="l", col=1, ylim=c(0,160000),xlim=c(2000,2012),
main="Total Donations by Donor Type by Year through 2012")
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Personal")), type="l", col=2)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Foundation")), type="l", col=3)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="Anonymous")), type="l", col=4)
lines(aggregate(Amount ~ DonationYear, data=donors, sum, subset = (DonationYear!="2013" & DonorType=="")), type="l", col=5)
legend("topleft", c("Business", "Personal", "Foundation", "Anonymous", "Missing"), lty=1, col=1:5)
library(XML)
help(readHTMLTable)
url <- paste("http://www.hokiesports.com/football/stats/showstats.html?14871")
web_page <- readLines(url)
dsum <- web_page[(grep("Virginia Tech Drive Summary", web_page) - 2):(grep("Virginia Tech Drive Summary", web_page) + 18)]
dsum2 <- readHTMLTable(dsum)
dsum
dsum2
setwd("~/GitHub/VTfootballstats/data")
dir()
vtds <- read.csv(dir()[1])
vtds
names(vtds)
str(vtds)
vtds[,1] <- as.factor(vtds[,1])
vtds[,3] <- as.factor(vtds[,1])
str(vtds)
sapply(ds2[1,],class) # check class of each variable
sapply(vtds[1,],class) # check class of each variable
aggregate(yards ~ quarter + season, data=vtds, mean)
head(vtds)
vtds <- read.csv(dir()[1])
vtds[,1] <- as.factor(vtds[,1]) # season
vtds[,3] <- as.factor(vtds[,3]) # quarter
aggregate(yards ~ quarter + season, data=vtds, mean)
aggregate(yards ~ quarter + season, data=vtds, mean, subset = season=="2012")
library(ggplot2)
ypq2012 <- aggregate(yards ~ quarter + season, data=vtds, mean, subset = season=="2012")
ggplot(ypq2012, eas(x=quarter, y=yards)) + geom_bar(stat="identity")
ggplot(ypq2012, aes(x=quarter, y=yards)) + geom_bar(stat="identity")
ypq2012 <- aggregate(yards ~ quarter + season, data=vtds, mean, subset = season=="2012" & quarter!="5")
ggplot(ypq2012, aes(x=quarter, y=yards)) + geom_bar(stat="identity")
ggplot(ypq2012, aes(x=quarter, y=yards)) + geom_bar(stat="identity", fill="orange", color="black")
ggplot(ypq2012, aes(x=quarter, y=yards)) +
geom_bar(stat="identity", fill="orange", color="black") +
ggtitle("Mean yards per drive per quarter for 2012 season")
ggplot(ypq2012, aes(x=quarter, y=yards)) +
geom_bar(stat="identity", fill="orange", color="black") +
ggtitle("Mean yards per drive per quarter for 2012 season") +
theme(plot.title=element_text(size=rel(1.5), face-"bold.italic"))
ggplot(ypq2012, aes(x=quarter, y=yards)) +
geom_bar(stat="identity", fill="orange", color="black") +
ggtitle("Mean yards per drive per quarter for 2012 season") +
theme(plot.title=element_text(size=rel(1.5), face="bold.italic"))
ggplot(ypq2012, aes(x=quarter, y=yards)) +
geom_bar(stat="identity", fill="orange", color="black") +
ggtitle("Mean yards per drive per quarter for 2012 season") +
theme(plot.title=element_text(size=rel(1.5), face="bold"))

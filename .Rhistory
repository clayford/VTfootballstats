install.packages("knitr")
library(XML) # needed to convert HTML table to list object
vtFballData <- function(start,stop,season){
dsf <- c()
# read the source code
for (i in start:stop){
url <- paste("http://www.hokiesports.com/football/stats/showstats.html?",i,sep="")
web_page <- readLines(url)
# find where VT drive summary begins
dsum <- web_page[(grep("Virginia Tech Drive Summary", web_page) - 2):(grep("Virginia Tech Drive Summary", web_page) + 18)]
dsum2 <- readHTMLTable(dsum)
rn <- dim(dsum2[[1]])[1]
cn <- dim(dsum2[[1]])[2]
ds <- dsum2[[1]][4:rn,c(1,(cn-2):cn)]
ds[,3] <- as.character(ds[,3]) # convert from factor to character
py <- do.call(rbind,strsplit(sub("-"," ",ds[,3])," "))
ds2 <- cbind(ds,py)
ds2[,5] <- as.character(ds2[,5]) # convert from factor to character
ds2[,6] <- as.character(ds2[,6]) # convert from factor to character
ds2[,5] <- as.numeric(ds2[,5]) # convert from character to numeric
ds2[,6] <- as.numeric(ds2[,6]) # convert from character to numeric
ds2[,3] <- NULL # drop original pl-yds column
names(ds2) <-c("quarter","result","top","plays","yards")
# drop unused factor levels carried over from readlines
ds2$quarter <- ds2$quarter[, drop=TRUE]
ds2$result <- ds2$result[, drop=TRUE]
# convert TOP from factor to character
ds2[,3] <- as.character(ds2[,3])
# convert TOP from M:S to just seconds
ds2$top <- sapply(strsplit(ds2$top,":"),
function(x) {
x <- as.numeric(x)
x[1]*60 + x[2]})
# need to add opponent
opp <- web_page[grep("Drive Summary", web_page)]
opp <- opp[grep("Virginia Tech", opp, invert=TRUE)] # get the one that is not VT
opp <- strsplit(opp,">")[[1]][2]
opp <- sub(" Drive Summary</td","",opp)
ds2 <- cbind(season,opp,ds2)
dsf <- rbind(dsf,ds2)
}
return(dsf)
}
dsData2012 <- vtFballData(14871,14882,2012)
install.packages("XML")
vtFballData <- function(start,stop,season){
dsf <- c()
# read the source code
for (i in start:stop){
url <- paste("http://www.hokiesports.com/football/stats/showstats.html?",i,sep="")
web_page <- readLines(url)
# find where VT drive summary begins
dsum <- web_page[(grep("Virginia Tech Drive Summary", web_page) - 2):(grep("Virginia Tech Drive Summary", web_page) + 18)]
dsum2 <- readHTMLTable(dsum)
rn <- dim(dsum2[[1]])[1]
cn <- dim(dsum2[[1]])[2]
ds <- dsum2[[1]][4:rn,c(1,(cn-2):cn)]
ds[,3] <- as.character(ds[,3]) # convert from factor to character
py <- do.call(rbind,strsplit(sub("-"," ",ds[,3])," "))
ds2 <- cbind(ds,py)
ds2[,5] <- as.character(ds2[,5]) # convert from factor to character
ds2[,6] <- as.character(ds2[,6]) # convert from factor to character
ds2[,5] <- as.numeric(ds2[,5]) # convert from character to numeric
ds2[,6] <- as.numeric(ds2[,6]) # convert from character to numeric
ds2[,3] <- NULL # drop original pl-yds column
names(ds2) <-c("quarter","result","top","plays","yards")
# drop unused factor levels carried over from readlines
ds2$quarter <- ds2$quarter[, drop=TRUE]
ds2$result <- ds2$result[, drop=TRUE]
# convert TOP from factor to character
ds2[,3] <- as.character(ds2[,3])
# convert TOP from M:S to just seconds
ds2$top <- sapply(strsplit(ds2$top,":"),
function(x) {
x <- as.numeric(x)
x[1]*60 + x[2]})
# need to add opponent
opp <- web_page[grep("Drive Summary", web_page)]
opp <- opp[grep("Virginia Tech", opp, invert=TRUE)] # get the one that is not VT
opp <- strsplit(opp,">")[[1]][2]
opp <- sub(" Drive Summary</td","",opp)
ds2 <- cbind(season,opp,ds2)
dsf <- rbind(dsf,ds2)
}
return(dsf)
}
dsData2012 <- vtFballData(14871,14882,2012)
remove.packages("arm")
remove.packages("foreign")
remove.packages("gcookbook")
library(XML) # needed to convert HTML table to list object
vtFballData <- function(start,stop,season){
dsf <- c()
# read the source code
for (i in start:stop){
url <- paste("http://www.hokiesports.com/football/stats/showstats.html?",i,sep="")
web_page <- readLines(url)
# find where VT drive summary begins
dsum <- web_page[(grep("Virginia Tech Drive Summary", web_page) - 2):(grep("Virginia Tech Drive Summary", web_page) + 18)]
dsum2 <- readHTMLTable(dsum)
rn <- dim(dsum2[[1]])[1]
cn <- dim(dsum2[[1]])[2]
ds <- dsum2[[1]][4:rn,c(1,(cn-2):cn)]
ds[,3] <- as.character(ds[,3]) # convert from factor to character
py <- do.call(rbind,strsplit(sub("-"," ",ds[,3])," "))
ds2 <- cbind(ds,py)
ds2[,5] <- as.character(ds2[,5]) # convert from factor to character
ds2[,6] <- as.character(ds2[,6]) # convert from factor to character
ds2[,5] <- as.numeric(ds2[,5]) # convert from character to numeric
ds2[,6] <- as.numeric(ds2[,6]) # convert from character to numeric
ds2[,3] <- NULL # drop original pl-yds column
names(ds2) <-c("quarter","result","top","plays","yards")
# drop unused factor levels carried over from readlines
ds2$quarter <- ds2$quarter[, drop=TRUE]
ds2$result <- ds2$result[, drop=TRUE]
# convert TOP from factor to character
ds2[,3] <- as.character(ds2[,3])
# convert TOP from M:S to just seconds
ds2$top <- sapply(strsplit(ds2$top,":"),
function(x) {
x <- as.numeric(x)
x[1]*60 + x[2]})
# need to add opponent
opp <- web_page[grep("Drive Summary", web_page)]
opp <- opp[grep("Virginia Tech", opp, invert=TRUE)] # get the one that is not VT
opp <- strsplit(opp,">")[[1]][2]
opp <- sub(" Drive Summary</td","",opp)
ds2 <- cbind(season,opp,ds2)
dsf <- rbind(dsf,ds2)
}
return(dsf)
}
dsData2012 <- vtFballData(14871,14882,2012)
View(dsData2012)
url <- paste("http://www.hokiesports.com/football/stats/showstats.html?14871")
dsData2012b <- vtFballData(15513,15513,2012) # bowl game
library(XML) # needed to convert HTML table to list object
dsData2012b <- vtFballData(15513,15513,2012) # bowl game
View(dsData2012b)
season2010 <- rbind(dsData2012,dsData2012b)
season2012 <- rbind(dsData2012,dsData2012b)
rm(season2010)
test <- readLines("http://www.hokiesports.com/football/stats/2011/")
head(test)
help(grep)
grep(test,"showstats?")
grep("showstats?",test)
grep("showstats?[0-9]",test,value=TRUE)
grep("showstats?\[0-9]",test,value=TRUE)
grep("showstats?([0-9])",test,value=TRUE)
grep("showstats\?([0-9])",test,value=TRUE)
grep("showstats\\?([0-9])",test,value=TRUE)
grep("^showstats\\?([0-9]){5}",test,value=TRUE)
grep("^showstats\\?$([0-9]){5}",test,value=TRUE)
grep("showstats?$([0-9]{5})",test,value=TRUE)
grep("showstats?([0-9]{5})",test,value=TRUE)
grep("showstats\\?([0-9]{5})",test,value=TRUE)
grep("showstats\\?([0-9]+)",test,value=TRUE)
grep("showstats",test,value=TRUE)
grep("showstats\\.html\\?[0-9]+",test,value=TRUE)
help(substr)
box <- grep("showstats\\.html\\?[0-9]+",test,value=TRUE)
class(box)
box
x <- c("A and B", "A, B and C", "A, B, C and D", "foobar")
pattern <- "[[:space:]]*(,|and)[[:space:]]"
m <- regexpr(pattern, x)
regmatches(x, m)
regmatches(x, m, invert = TRUE)
x <- grep("showstats\\.html\\?[0-9]+",test,value=TRUE)
rm(box)
m <- "[0-9]{5,5}"
regmatches(x,m)
x <- c("A and B", "A, B and C", "A, B, C and D", "foobar")
pattern <- "[[:space:]]*(,|and)[[:space:]]"
## Match data from regexpr()
m <- regexpr(pattern, x)
x
m
help(sub)
help(strsplit)
box <- grep("showstats\\.html\\?[0-9]+",test,value=TRUE)
strsplit(box,"?")
strsplit(box,"\\?")
box1 <- strsplit(box,"\\?")
box1[[1]][2]
box
gsub("[0-9]{5,5}","\\1",box)
sub("[0-9]{5,5}","\\1",box)
box
sub(".*?[0-9]{5,5}.*?", "\\1", box)
unlist(strsplit(box,"?"))
unlist(strsplit(box,"\\?"))
grep("[0-9]{5,5}",unlist(strsplit(box,"?")))
grep("^[0-9]{5,5}",unlist(strsplit(box,"?")))
box1 <- strsplit(box,"\\?"))
box1 <- strsplit(box,"\\?")
box2
box1
box1 <- unlist(strsplit(box,"\\?"))
box1
box1[c(FALSE,TRUE)]
box1 <- unlist(strsplit(box,"\\?"))[c(FALSE,TRUE)]
box1
ids <- substr(box1,1,5)
ids
for (i in 1987:2012){
allids <- c() #will hold all box score ids
url <- paste("http://www.hokiesports.com/football/stats/",i,sep="")
wp <- readLines(url)
box <- grep("showstats\\.html\\?[0-9]+",test,value=TRUE) # split the element at "?"
box <- unlist(strsplit(box,"\\?"))[c(FALSE,TRUE)] #get every second element
ids <- substr(box,1,5)
allids <- rbind(allids,ids)
}
allids
for (i in 1987:1987){
allids <- c() #will hold all box score ids
url <- paste("http://www.hokiesports.com/football/stats/",i,sep="")
wp <- readLines(url)
box <- grep("showstats\\.html\\?[0-9]+",wp,value=TRUE) # split the element at "?"
box <- unlist(strsplit(box,"\\?"))[c(FALSE,TRUE)] #get every second element
ids <- substr(box,1,5)
allids <- rbind(allids,ids)
}
allids
for (i in 1987:1987){
allids <- c() #will hold all box score ids
url <- paste("http://www.hokiesports.com/football/stats/",i,sep="")
wp <- readLines(url)
box <- grep("showstats\\.html\\?[0-9]+",wp,value=TRUE) # split the element at "?"
box <- unlist(strsplit(box,"\\?"))[c(FALSE,TRUE)] #get every second element
ids <- substr(box,1,5)
allids <- c(allids,ids)
}
allids
allids <- c() #will hold all box score ids
for (i in 1987:2012){
url <- paste("http://www.hokiesports.com/football/stats/",i,sep="")
wp <- readLines(url)
box <- grep("showstats\\.html\\?[0-9]+",wp,value=TRUE) # split the element at "?"
box <- unlist(strsplit(box,"\\?"))[c(FALSE,TRUE)] #get every second element
ids <- substr(box,1,5)
allids <- c(allids,ids)
}
allids
